{
  "scopeName": "source.lamina",
  "fileTypes": ["lm"],
  "patterns": [
	{
		"match": "//.*",
		"name": "comment.line.double-slash.lamina"
	},
	{
		"begin": "/\\*",
		"end": "\\*/",
		"name": "comment.block.lamina"
	},
	{
		"match": "\\b(var|func|if|else|while|for|return|break|continue|print|true|false|null|include|define)\\b",
		"name": "keyword.control.lamina"
	},
	{
		"match": "\\b(int|float|rational|irrational|bool|string|bigint)\\b",
		"name": "storage.type.lamina"
	},
	{
		"match": "\\b(pi|e|sqrt|abs|sin|cos|log|dot|cross|norm|det|fraction|decimal|visit|visit_by_str)\\b",
		"name": "support.function.builtin.lamina"
	},
	{
		"match": "\\b(==|!=|>|<|>=|<=)\\b",
		"name": "keyword.operator.comparison.lamina"
	},
	{
		"match": "(\\+|-|\\*|\\/|%|\\^|!)",
		"name": "keyword.operator.arithmetic.lamina"
	},
	{
		"match": "\"(\\\\.|[^\"\\\\])*\"",
		"name": "string.quoted.double.lamina"
	},
	{
		"match": "\\b(\\d+\\.?\\d*|\\.\\d+)([eE][-+]?\\d+)?\\b",
		"name": "constant.numeric.float.lamina"
	},
	{
		"match": "\\b\\d+\\b",
		"name": "constant.numeric.integer.lamina"
	},
	{
		"match": "\\b(\\d+\\/\\d+|\\d+!)\\b",
		"name": "constant.numeric.rational.lamina"
	},
	{
		"match": "\\b(√\\d+|π|e)\\b",
		"name": "constant.numeric.irrational.lamina"
	},
	{
		"match": "\\b(true|false)\\b",
		"name": "constant.language.boolean.lamina"
	},
	{
		"match": "\\b(null)\\b",
		"name": "constant.language.null.lamina"
	},
	{
		"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
		"name": "variable.other.lamina"
	}
	],
  "repository": {
	"comment": {
	  "patterns": [
		{
		  "match": "//.*",
		  "name": "comment.line.double-slash.lamina"
		},
		{
		  "begin": "/\\*",
		  "end": "\\*/",
		  "name": "comment.block.lamina"
		}
	  ]
	}
  }
}